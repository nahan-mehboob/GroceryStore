<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="36" passed="30" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-30T00:31:47 IST" name="My Extent Report Suite" finished-at="2022-12-30T00:39:07 IST" duration-ms="439971">
    <groups>
      <group name="SmokeTest">
        <method signature="ManageDeliveryBoyTestCases.validateToolKit()[pri:1, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" name="validateToolKit" class="testCases.ManageDeliveryBoyTestCases"/>
        <method signature="PushNotificationsTestCases.validateTitleOfThePage()[pri:1, instance:testCases.PushNotificationsTestCases@22ff4249]" name="validateTitleOfThePage" class="testCases.PushNotificationsTestCases"/>
      </group> <!-- SmokeTest -->
    </groups>
    <test started-at="2022-12-30T00:31:47 IST" name="My Test" finished-at="2022-12-30T00:39:07 IST" duration-ms="439971">
      <class name="testCases.ManageDeliveryBoyTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:33:34 IST" name="beforeMethod" finished-at="2022-12-30T00:33:38 IST" duration-ms="4501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateToolKit()[pri:1, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:33:38 IST" name="validateToolKit" description="Tool kit validation" finished-at="2022-12-30T00:33:44 IST" duration-ms="5021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateToolKit -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:33:44 IST" name="afterMethod" finished-at="2022-12-30T00:33:44 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateToolKit status=SUCCESS method=ManageDeliveryBoyTestCases.validateToolKit()[pri:1, instance:testCases.ManageDeliveryBoyTestCases@40a4337a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:33:44 IST" name="beforeMethod" finished-at="2022-12-30T00:33:48 IST" duration-ms="4434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchButtonClickability()[pri:2, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:33:48 IST" name="validateSearchButtonClickability" description="Validating whether the search button is enabled" finished-at="2022-12-30T00:33:51 IST" duration-ms="2501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchButtonClickability -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:33:51 IST" name="afterMethod" finished-at="2022-12-30T00:34:07 IST" duration-ms="16262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchButtonClickability status=SUCCESS method=ManageDeliveryBoyTestCases.validateSearchButtonClickability()[pri:2, instance:testCases.ManageDeliveryBoyTestCases@40a4337a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:34:07 IST" name="beforeMethod" finished-at="2022-12-30T00:34:14 IST" duration-ms="7182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchButtonColor()[pri:3, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:34:14 IST" name="validateSearchButtonColor" description="Validating the color property of search button" finished-at="2022-12-30T00:34:17 IST" duration-ms="2489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchButtonColor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageDeliveryBoyTestCases@40a4337a]" started-at="2022-12-30T00:34:17 IST" name="afterMethod" finished-at="2022-12-30T00:34:17 IST" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchButtonColor status=SUCCESS method=ManageDeliveryBoyTestCases.validateSearchButtonColor()[pri:3, instance:testCases.ManageDeliveryBoyTestCases@40a4337a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageDeliveryBoyTestCases -->
      <class name="testCases.MobileSliderTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:17 IST" name="beforeMethod" finished-at="2022-12-30T00:34:21 IST" duration-ms="4303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateTitleOfThePage()[pri:1, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:21 IST" name="validateTitleOfThePage" description="Validating the title of mobile slider page" finished-at="2022-12-30T00:34:23 IST" duration-ms="2362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitleOfThePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:23 IST" name="afterMethod" finished-at="2022-12-30T00:34:23 IST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTitleOfThePage status=SUCCESS method=MobileSliderTestCases.validateTitleOfThePage()[pri:1, instance:testCases.MobileSliderTestCases@6025e1b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:23 IST" name="beforeMethod" finished-at="2022-12-30T00:34:27 IST" duration-ms="3691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateImageDisplay()[pri:2, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:27 IST" name="validateImageDisplay" description="Validating whether the first image is displayed" finished-at="2022-12-30T00:34:31 IST" duration-ms="3897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImageDisplay -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:31 IST" name="afterMethod" finished-at="2022-12-30T00:34:47 IST" duration-ms="16288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImageDisplay status=SUCCESS method=MobileSliderTestCases.validateImageDisplay()[pri:2, instance:testCases.MobileSliderTestCases@6025e1b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:47 IST" name="beforeMethod" finished-at="2022-12-30T00:34:51 IST" duration-ms="4010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateStatusOfFirstImage()[pri:3, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:51 IST" name="validateStatusOfFirstImage" description="Validating the status of first image" finished-at="2022-12-30T00:34:55 IST" duration-ms="3657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusOfFirstImage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.MobileSliderTestCases@6025e1b6]" started-at="2022-12-30T00:34:55 IST" name="afterMethod" finished-at="2022-12-30T00:35:11 IST" duration-ms="16287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStatusOfFirstImage status=SUCCESS method=MobileSliderTestCases.validateStatusOfFirstImage()[pri:3, instance:testCases.MobileSliderTestCases@6025e1b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.MobileSliderTestCases -->
      <class name="testCases.ManageProductTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:15 IST" name="beforeMethod" finished-at="2022-12-30T00:37:17 IST" duration-ms="1947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateVegIsSelectedByDefault()[pri:1, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:17 IST" name="validateVegIsSelectedByDefault" description="Validating whether veg is selected by default" finished-at="2022-12-30T00:37:20 IST" duration-ms="3312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVegIsSelectedByDefault -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:20 IST" name="afterMethod" finished-at="2022-12-30T00:37:36 IST" duration-ms="16293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVegIsSelectedByDefault status=SUCCESS method=ManageProductTestCases.validateVegIsSelectedByDefault()[pri:1, instance:testCases.ManageProductTestCases@5b12b668] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:36 IST" name="beforeMethod" finished-at="2022-12-30T00:37:38 IST" duration-ms="1973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateStockIsYesByDefault()[pri:2, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:38 IST" name="validateStockIsYesByDefault" description="Validating whether yes button is selected by default for stock" finished-at="2022-12-30T00:37:41 IST" duration-ms="3067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStockIsYesByDefault -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:41 IST" name="afterMethod" finished-at="2022-12-30T00:37:58 IST" duration-ms="16244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStockIsYesByDefault status=SUCCESS method=ManageProductTestCases.validateStockIsYesByDefault()[pri:2, instance:testCases.ManageProductTestCases@5b12b668] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:37:58 IST" name="beforeMethod" finished-at="2022-12-30T00:38:00 IST" duration-ms="2784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateStylePropertyOfSaveButton()[pri:3, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:38:00 IST" name="validateStylePropertyOfSaveButton" description="Validating the font color of save button" finished-at="2022-12-30T00:38:04 IST" duration-ms="3182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStylePropertyOfSaveButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:38:04 IST" name="afterMethod" finished-at="2022-12-30T00:38:20 IST" duration-ms="16283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStylePropertyOfSaveButton status=SUCCESS method=ManageProductTestCases.validateStylePropertyOfSaveButton()[pri:3, instance:testCases.ManageProductTestCases@5b12b668] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:38:20 IST" name="beforeMethod" finished-at="2022-12-30T00:38:23 IST" duration-ms="2867" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateUploadedFileIsPreviewDisplayed()[pri:4, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:38:23 IST" name="validateUploadedFileIsPreviewDisplayed" description="Validating whether the uploaded file is previewed" finished-at="2022-12-30T00:38:28 IST" duration-ms="5691" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[move target out of bounds
  (Session info: chrome=108.0.5359.125)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [262e517baa18a55006453d914847abe2, actions {actions=[org.openqa.selenium.interactions.Sequence@311453ab]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56587}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56587/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 262e517baa18a55006453d914847abe2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds
  (Session info: chrome=108.0.5359.125)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [262e517baa18a55006453d914847abe2, actions {actions=[org.openqa.selenium.interactions.Sequence@311453ab]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56587}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56587/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 262e517baa18a55006453d914847abe2
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:615)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:567)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:536)
at utilities.FileHandling.fileUpload(FileHandling.java:19)
at elementRepository.ManageProduct.verifyUploadedFileIsPreviewDisplayed(ManageProduct.java:73)
at testCases.ManageProductTestCases.validateUploadedFileIsPreviewDisplayed(ManageProductTestCases.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUploadedFileIsPreviewDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageProductTestCases@5b12b668]" started-at="2022-12-30T00:38:28 IST" name="afterMethod" finished-at="2022-12-30T00:38:29 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadedFileIsPreviewDisplayed status=FAILURE method=ManageProductTestCases.validateUploadedFileIsPreviewDisplayed()[pri:4, instance:testCases.ManageProductTestCases@5b12b668] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageProductTestCases -->
      <class name="testCases.PushNotificationsTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:11 IST" name="beforeMethod" finished-at="2022-12-30T00:35:16 IST" duration-ms="4699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateTitleOfThePage()[pri:1, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:16 IST" name="validateTitleOfThePage" description="Validating the title of push notifications page" finished-at="2022-12-30T00:35:18 IST" duration-ms="1995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitleOfThePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:18 IST" name="afterMethod" finished-at="2022-12-30T00:35:18 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTitleOfThePage status=SUCCESS method=PushNotificationsTestCases.validateTitleOfThePage()[pri:1, instance:testCases.PushNotificationsTestCases@22ff4249] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:18 IST" name="beforeMethod" finished-at="2022-12-30T00:35:22 IST" duration-ms="3843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateColorOfMandatoryField()[pri:2, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:22 IST" name="validateColorOfMandatoryField" description="Validating the color of mandatory field" finished-at="2022-12-30T00:35:25 IST" duration-ms="2703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateColorOfMandatoryField -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:25 IST" name="afterMethod" finished-at="2022-12-30T00:35:25 IST" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateColorOfMandatoryField status=SUCCESS method=PushNotificationsTestCases.validateColorOfMandatoryField()[pri:2, instance:testCases.PushNotificationsTestCases@22ff4249] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:25 IST" name="beforeMethod" finished-at="2022-12-30T00:35:28 IST" duration-ms="3543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateColorOfSendButton()[pri:3, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:28 IST" name="validateColorOfSendButton" description="Validating the color of send button" finished-at="2022-12-30T00:35:30 IST" duration-ms="1839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateColorOfSendButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:30 IST" name="afterMethod" finished-at="2022-12-30T00:35:30 IST" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateColorOfSendButton status=SUCCESS method=PushNotificationsTestCases.validateColorOfSendButton()[pri:3, instance:testCases.PushNotificationsTestCases@22ff4249] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:30 IST" name="beforeMethod" finished-at="2022-12-30T00:35:37 IST" duration-ms="6745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateAlertMessage()[pri:4, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:37 IST" name="validateAlertMessage" description="Validating the text of alert message" finished-at="2022-12-30T00:35:41 IST" duration-ms="3709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:41 IST" name="afterMethod" finished-at="2022-12-30T00:35:41 IST" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertMessage status=SUCCESS method=PushNotificationsTestCases.validateAlertMessage()[pri:4, instance:testCases.PushNotificationsTestCases@22ff4249] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:41 IST" name="beforeMethod" finished-at="2022-12-30T00:35:45 IST" duration-ms="3778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateAlertMsgBgColor()[pri:5, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:45 IST" name="validateAlertMsgBgColor" description="Validating the background color of alert message" finished-at="2022-12-30T00:35:48 IST" duration-ms="3166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertMsgBgColor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationsTestCases@22ff4249]" started-at="2022-12-30T00:35:48 IST" name="afterMethod" finished-at="2022-12-30T00:35:48 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertMsgBgColor status=SUCCESS method=PushNotificationsTestCases.validateAlertMsgBgColor()[pri:5, instance:testCases.PushNotificationsTestCases@22ff4249] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.PushNotificationsTestCases -->
      <class name="testCases.ManageLocationTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageLocationTestCases@1165b38]" started-at="2022-12-30T00:38:29 IST" name="beforeMethod" finished-at="2022-12-30T00:38:32 IST" duration-ms="3112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateCountOfActiveStatus()[pri:1, instance:testCases.ManageLocationTestCases@1165b38]" started-at="2022-12-30T00:38:32 IST" name="validateCountOfActiveStatus" description="Validate the count for the status active" finished-at="2022-12-30T00:38:34 IST" duration-ms="2419" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.ManageLocationTestCases.validateCountOfActiveStatus(ManageLocationTestCases.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCountOfActiveStatus -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocationTestCases@1165b38]" started-at="2022-12-30T00:38:34 IST" name="afterMethod" finished-at="2022-12-30T00:38:35 IST" duration-ms="270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCountOfActiveStatus status=FAILURE method=ManageLocationTestCases.validateCountOfActiveStatus()[pri:1, instance:testCases.ManageLocationTestCases@1165b38] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageLocationTestCases@1165b38]" started-at="2022-12-30T00:38:35 IST" name="beforeMethod" finished-at="2022-12-30T00:38:36 IST" duration-ms="1918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateStateNameFromDropdown()[pri:2, instance:testCases.ManageLocationTestCases@1165b38]" started-at="2022-12-30T00:38:36 IST" name="validateStateNameFromDropdown" description="Validate the value selected from the  state dropdown" finished-at="2022-12-30T00:38:39 IST" duration-ms="2465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStateNameFromDropdown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocationTestCases@1165b38]" started-at="2022-12-30T00:38:39 IST" name="afterMethod" finished-at="2022-12-30T00:38:39 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStateNameFromDropdown status=SUCCESS method=ManageLocationTestCases.validateStateNameFromDropdown()[pri:2, instance:testCases.ManageLocationTestCases@1165b38] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageLocationTestCases -->
      <class name="testCases.AdminUsersTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.AdminUsersTestCases@4c12331b]" started-at="2022-12-30T00:38:39 IST" name="beforeMethod" finished-at="2022-12-30T00:38:41 IST" duration-ms="2085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateAdminProfileWithFaker()[pri:1, instance:testCases.AdminUsersTestCases@4c12331b]" started-at="2022-12-30T00:38:41 IST" name="validateAdminProfileWithFaker" description="validating a user profile already exists while using faker class" finished-at="2022-12-30T00:38:44 IST" duration-ms="2972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAdminProfileWithFaker -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsersTestCases@4c12331b]" started-at="2022-12-30T00:38:44 IST" name="afterMethod" finished-at="2022-12-30T00:39:00 IST" duration-ms="16248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAdminProfileWithFaker status=SUCCESS method=AdminUsersTestCases.validateAdminProfileWithFaker()[pri:1, instance:testCases.AdminUsersTestCases@4c12331b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.AdminUsersTestCases@4c12331b]" started-at="2022-12-30T00:39:00 IST" name="beforeMethod" finished-at="2022-12-30T00:39:04 IST" duration-ms="3681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateAdminProfileAlreadyExists()[pri:2, instance:testCases.AdminUsersTestCases@4c12331b]" started-at="2022-12-30T00:39:04 IST" name="validateAdminProfileAlreadyExists" description="validating a user profile already exists" finished-at="2022-12-30T00:39:07 IST" duration-ms="2622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAdminProfileAlreadyExists -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsersTestCases@4c12331b]" started-at="2022-12-30T00:39:07 IST" name="afterMethod" finished-at="2022-12-30T00:39:07 IST" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAdminProfileAlreadyExists status=SUCCESS method=AdminUsersTestCases.validateAdminProfileAlreadyExists()[pri:2, instance:testCases.AdminUsersTestCases@4c12331b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.AdminUsersTestCases -->
      <class name="testCases.HomeTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:16 IST" name="beforeMethod" finished-at="2022-12-30T00:33:20 IST" duration-ms="3732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="homeBgColorValidation()[pri:1, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:20 IST" name="homeBgColorValidation" description="Validating the background color of home page" finished-at="2022-12-30T00:33:21 IST" duration-ms="1187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeBgColorValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:21 IST" name="afterMethod" finished-at="2022-12-30T00:33:21 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homeBgColorValidation status=SUCCESS method=HomeTestCases.homeBgColorValidation()[pri:1, instance:testCases.HomeTestCases@6a6cb05c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:21 IST" name="beforeMethod" finished-at="2022-12-30T00:33:25 IST" duration-ms="3899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="manageExpenseTextValidation()[pri:2, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:25 IST" name="manageExpenseTextValidation" description="Validating the text of manage expense" finished-at="2022-12-30T00:33:26 IST" duration-ms="1264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageExpenseTextValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:26 IST" name="afterMethod" finished-at="2022-12-30T00:33:26 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageExpenseTextValidation status=SUCCESS method=HomeTestCases.manageExpenseTextValidation()[pri:2, instance:testCases.HomeTestCases@6a6cb05c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:26 IST" name="beforeMethod" finished-at="2022-12-30T00:33:32 IST" duration-ms="5695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="manageUsersTextValidation()[pri:3, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:32 IST" name="manageUsersTextValidation" description="Validating the text of manage users" finished-at="2022-12-30T00:33:34 IST" duration-ms="1976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageUsersTextValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.HomeTestCases@6a6cb05c]" started-at="2022-12-30T00:33:34 IST" name="afterMethod" finished-at="2022-12-30T00:33:34 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageUsersTextValidation status=SUCCESS method=HomeTestCases.manageUsersTextValidation()[pri:3, instance:testCases.HomeTestCases@6a6cb05c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.HomeTestCases -->
      <class name="testCases.SettingsPageTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.SettingsPageTestCases@4c402120]" started-at="2022-12-30T00:36:01 IST" name="beforeMethod" finished-at="2022-12-30T00:36:05 IST" duration-ms="4168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLogout()[pri:1, instance:testCases.SettingsPageTestCases@4c402120]" started-at="2022-12-30T00:36:05 IST" name="validateLogout" description="Validating whether logout button logs out of the page" finished-at="2022-12-30T00:36:08 IST" duration-ms="2487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogout -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.SettingsPageTestCases@4c402120]" started-at="2022-12-30T00:36:08 IST" name="afterMethod" finished-at="2022-12-30T00:36:08 IST" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogout status=SUCCESS method=SettingsPageTestCases.validateLogout()[pri:1, instance:testCases.SettingsPageTestCases@4c402120] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.SettingsPageTestCases -->
      <class name="testCases.LoginTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:47 IST" name="beforeMethod" finished-at="2022-12-30T00:31:51 IST" duration-ms="3843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loggedInProfileNameValidation()[pri:1, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:51 IST" name="loggedInProfileNameValidation" description="Validating the profile name of logged user" finished-at="2022-12-30T00:31:52 IST" duration-ms="1062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggedInProfileNameValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:52 IST" name="afterMethod" finished-at="2022-12-30T00:31:52 IST" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loggedInProfileNameValidation status=SUCCESS method=LoginTestCases.loggedInProfileNameValidation()[pri:1, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:52 IST" name="beforeMethod" finished-at="2022-12-30T00:31:55 IST" duration-ms="3007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:55 IST" name="loggedInProfileNameValidationUsingDataProvider" description="Login using data provider" data-provider="data" finished-at="2022-12-30T00:31:56 IST" duration-ms="1287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggedInProfileNameValidationUsingDataProvider -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:56 IST" name="afterMethod" finished-at="2022-12-30T00:31:56 IST" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loggedInProfileNameValidationUsingDataProvider status=SUCCESS method=LoginTestCases.loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:31:56 IST" name="beforeMethod" finished-at="2022-12-30T00:32:00 IST" duration-ms="3667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:00 IST" name="loggedInProfileNameValidationUsingDataProvider" description="Login using data provider" data-provider="data" finished-at="2022-12-30T00:32:11 IST" duration-ms="10643" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [204bfb015cbc2f091c9237e348831c4a, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55657}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55657/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 204bfb015cbc2f091c9237e348831c4a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [204bfb015cbc2f091c9237e348831c4a, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55657}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55657/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 204bfb015cbc2f091c9237e348831c4a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at utilities.GeneralUtilities.getElementText(GeneralUtilities.java:18)
at elementRepository.LoginPage.profileNameVerification(LoginPage.java:56)
at testCases.LoginTestCases.loggedInProfileNameValidationUsingDataProvider(LoginTestCases.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggedInProfileNameValidationUsingDataProvider -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:11 IST" name="afterMethod" finished-at="2022-12-30T00:32:11 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loggedInProfileNameValidationUsingDataProvider status=FAILURE method=LoginTestCases.loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:11 IST" name="beforeMethod" finished-at="2022-12-30T00:32:14 IST" duration-ms="2683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:14 IST" name="loggedInProfileNameValidationUsingDataProvider" description="Login using data provider" data-provider="data" finished-at="2022-12-30T00:32:24 IST" duration-ms="10580" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin4]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9f08ea1dfa99df727be9c7ba2fbb4fe3, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55686}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55686/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9f08ea1dfa99df727be9c7ba2fbb4fe3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9f08ea1dfa99df727be9c7ba2fbb4fe3, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55686}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55686/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9f08ea1dfa99df727be9c7ba2fbb4fe3
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at utilities.GeneralUtilities.getElementText(GeneralUtilities.java:18)
at elementRepository.LoginPage.profileNameVerification(LoginPage.java:56)
at testCases.LoginTestCases.loggedInProfileNameValidationUsingDataProvider(LoginTestCases.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggedInProfileNameValidationUsingDataProvider -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:24 IST" name="afterMethod" finished-at="2022-12-30T00:32:25 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loggedInProfileNameValidationUsingDataProvider status=FAILURE method=LoginTestCases.loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:25 IST" name="beforeMethod" finished-at="2022-12-30T00:32:28 IST" duration-ms="3296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:28 IST" name="loggedInProfileNameValidationUsingDataProvider" description="Login using data provider" data-provider="data" finished-at="2022-12-30T00:32:38 IST" duration-ms="10525" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin2]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d37d1c48bb0275cb3db64773f4b7f6cb, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55714}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55714/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d37d1c48bb0275cb3db64773f4b7f6cb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@data-toggle='dropdown']"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d37d1c48bb0275cb3db64773f4b7f6cb, findElement {using=xpath, value=//a[@data-toggle='dropdown']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55714}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:55714/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d37d1c48bb0275cb3db64773f4b7f6cb
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at utilities.GeneralUtilities.getElementText(GeneralUtilities.java:18)
at elementRepository.LoginPage.profileNameVerification(LoginPage.java:56)
at testCases.LoginTestCases.loggedInProfileNameValidationUsingDataProvider(LoginTestCases.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggedInProfileNameValidationUsingDataProvider -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:38 IST" name="afterMethod" finished-at="2022-12-30T00:32:39 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loggedInProfileNameValidationUsingDataProvider status=FAILURE method=LoginTestCases.loggedInProfileNameValidationUsingDataProvider(java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:39 IST" name="beforeMethod" finished-at="2022-12-30T00:32:46 IST" duration-ms="6874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="profileNameStyleValidation()[pri:3, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:46 IST" name="profileNameStyleValidation" description="Validating color property of profile name" finished-at="2022-12-30T00:32:47 IST" duration-ms="1447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- profileNameStyleValidation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:32:47 IST" name="afterMethod" finished-at="2022-12-30T00:33:03 IST" duration-ms="16279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=profileNameStyleValidation status=SUCCESS method=LoginTestCases.profileNameStyleValidation()[pri:3, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:33:03 IST" name="beforeMethod" finished-at="2022-12-30T00:33:07 IST" duration-ms="3958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationOfRememberMeCheckbox()[pri:4, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:33:07 IST" name="validationOfRememberMeCheckbox" description="Validating whether remember checkbox is unchecked" finished-at="2022-12-30T00:33:07 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationOfRememberMeCheckbox -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:33:07 IST" name="afterMethod" finished-at="2022-12-30T00:33:08 IST" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationOfRememberMeCheckbox status=SUCCESS method=LoginTestCases.validationOfRememberMeCheckbox()[pri:4, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:33:08 IST" name="beforeMethod" finished-at="2022-12-30T00:33:13 IST" duration-ms="5045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="excelRead()[pri:5, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:33:13 IST" name="excelRead" description="Login using excel read" finished-at="2022-12-30T00:33:16 IST" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelRead -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestCases@78691363]" started-at="2022-12-30T00:33:16 IST" name="afterMethod" finished-at="2022-12-30T00:33:16 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelRead status=SUCCESS method=LoginTestCases.excelRead()[pri:5, instance:testCases.LoginTestCases@78691363] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.LoginTestCases -->
      <class name="testCases.ManageExpenseTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageExpenseTestCases@2d1ef81a]" started-at="2022-12-30T00:35:48 IST" name="beforeMethod" finished-at="2022-12-30T00:35:53 IST" duration-ms="4929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validatingTheProductTitleAlreadyExists()[pri:1, instance:testCases.ManageExpenseTestCases@2d1ef81a]" started-at="2022-12-30T00:35:53 IST" name="validatingTheProductTitleAlreadyExists" description="Validating whether product title already exists" finished-at="2022-12-30T00:36:01 IST" duration-ms="7934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingTheProductTitleAlreadyExists -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageExpenseTestCases@2d1ef81a]" started-at="2022-12-30T00:36:01 IST" name="afterMethod" finished-at="2022-12-30T00:36:01 IST" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatingTheProductTitleAlreadyExists status=SUCCESS method=ManageExpenseTestCases.validatingTheProductTitleAlreadyExists()[pri:1, instance:testCases.ManageExpenseTestCases@2d1ef81a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageExpenseTestCases -->
      <class name="testCases.ManageOrdersTestCases">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:08 IST" name="beforeMethod" finished-at="2022-12-30T00:36:12 IST" duration-ms="4272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSizeOfStatusDropdown()[pri:1, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:12 IST" name="validateSizeOfStatusDropdown" description="Validating size of the status dropdown" finished-at="2022-12-30T00:36:15 IST" duration-ms="2496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSizeOfStatusDropdown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:15 IST" name="afterMethod" finished-at="2022-12-30T00:36:15 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSizeOfStatusDropdown status=SUCCESS method=ManageOrdersTestCases.validateSizeOfStatusDropdown()[pri:1, instance:testCases.ManageOrdersTestCases@327514f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:15 IST" name="beforeMethod" finished-at="2022-12-30T00:36:20 IST" duration-ms="5491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validatePaymentModeIsBank()[pri:2, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:20 IST" name="validatePaymentModeIsBank" description="Validating whether the payment mode is bank itself while selecting bank from dropdown" finished-at="2022-12-30T00:36:27 IST" duration-ms="7153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentModeIsBank -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:27 IST" name="afterMethod" finished-at="2022-12-30T00:36:27 IST" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentModeIsBank status=SUCCESS method=ManageOrdersTestCases.validatePaymentModeIsBank()[pri:2, instance:testCases.ManageOrdersTestCases@327514f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:27 IST" name="beforeMethod" finished-at="2022-12-30T00:36:33 IST" duration-ms="5203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateOrderIdAndPaymentMode()[pri:3, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:33 IST" name="validateOrderIdAndPaymentMode" description="Validating the text of given order id and its payment mode" finished-at="2022-12-30T00:36:49 IST" duration-ms="16512" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c7e1bfa6c413b7706a478c536cf19d64, actions {actions=[org.openqa.selenium.interactions.Sequence@7b9fea11]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56390}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56390/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c7e1bfa6c413b7706a478c536cf19d64]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c7e1bfa6c413b7706a478c536cf19d64, actions {actions=[org.openqa.selenium.interactions.Sequence@7b9fea11]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56390}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56390/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c7e1bfa6c413b7706a478c536cf19d64
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:362)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:154)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182)
at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:68)
at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278)
at org.openqa.selenium.json.Json.toJson(Json.java:42)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:259)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:615)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:567)
at utilities.GeneralUtilities.moveToTheElement(GeneralUtilities.java:125)
at elementRepository.ManageOrders.verifyPaymentMethod(ManageOrders.java:110)
at testCases.ManageOrdersTestCases.validateOrderIdAndPaymentMode(ManageOrdersTestCases.java:53)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:303)
at org.openqa.selenium.json.Json.toJson(Json.java:40)
... 37 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:358)
... 58 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//table[@class='table table-bordered table-hover table-sm']//tbody//tr[1]//td[5]"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-KQD2HIRQ', ip: '192.168.1.5', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c7e1bfa6c413b7706a478c536cf19d64, findElement {using=xpath, value=//table[@class='table table-bordered table-hover table-sm']//tbody//tr[1]//td[5]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56390}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56390/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c7e1bfa6c413b7706a478c536cf19d64
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:260)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:209)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:73)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
... 60 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdAndPaymentMode -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:49 IST" name="afterMethod" finished-at="2022-12-30T00:36:50 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdAndPaymentMode status=FAILURE method=ManageOrdersTestCases.validateOrderIdAndPaymentMode()[pri:3, instance:testCases.ManageOrdersTestCases@327514f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:50 IST" name="beforeMethod" finished-at="2022-12-30T00:36:51 IST" duration-ms="1806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateDeletionOfProductOrder()[pri:4, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:51 IST" name="validateDeletionOfProductOrder" description="Validating whether the delete action is successfully performed" finished-at="2022-12-30T00:36:58 IST" duration-ms="7131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeletionOfProductOrder -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageOrdersTestCases@327514f]" started-at="2022-12-30T00:36:58 IST" name="afterMethod" finished-at="2022-12-30T00:37:15 IST" duration-ms="16290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeletionOfProductOrder status=SUCCESS method=ManageOrdersTestCases.validateDeletionOfProductOrder()[pri:4, instance:testCases.ManageOrdersTestCases@327514f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManageOrdersTestCases -->
    </test> <!-- My Test -->
  </suite> <!-- My Extent Report Suite -->
</testng-results>
